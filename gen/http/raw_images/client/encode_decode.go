// Code generated by goa v3.2.3, DO NOT EDIT.
//
// Raw images HTTP client encoders and decoders
//
// Command:
// $ goa gen image-loader/design

package client

import (
	"bytes"
	"context"
	rawimages "image-loader/gen/raw_images"
	rawimagesviews "image-loader/gen/raw_images/views"
	"io/ioutil"
	"net/http"
	"net/url"

	goahttp "goa.design/goa/v3/http"
)

// BuildLoadNewRawSatelliteImageRequest instantiates a HTTP request object with
// method and path set to call the "Raw images" service "Load new raw satellite
// image" endpoint
func (c *Client) BuildLoadNewRawSatelliteImageRequest(ctx context.Context, v interface{}) (*http.Request, error) {
	u := &url.URL{Scheme: c.scheme, Host: c.host, Path: LoadNewRawSatelliteImageRawImagesPath()}
	req, err := http.NewRequest("POST", u.String(), nil)
	if err != nil {
		return nil, goahttp.ErrInvalidURL("Raw images", "Load new raw satellite image", u.String(), err)
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}

	return req, nil
}

// EncodeLoadNewRawSatelliteImageRequest returns an encoder for requests sent
// to the Raw images Load new raw satellite image server.
func EncodeLoadNewRawSatelliteImageRequest(encoder func(*http.Request) goahttp.Encoder) func(*http.Request, interface{}) error {
	return func(req *http.Request, v interface{}) error {
		p, ok := v.(*rawimages.RawSatelliteImage)
		if !ok {
			return goahttp.ErrInvalidType("Raw images", "Load new raw satellite image", "*rawimages.RawSatelliteImage", v)
		}
		body := NewLoadNewRawSatelliteImageRequestBody(p)
		if err := encoder(req).Encode(&body); err != nil {
			return goahttp.ErrEncodingError("Raw images", "Load new raw satellite image", err)
		}
		return nil
	}
}

// DecodeLoadNewRawSatelliteImageResponse returns a decoder for responses
// returned by the Raw images Load new raw satellite image endpoint.
// restoreBody controls whether the response body should be restored after
// having been read.
// DecodeLoadNewRawSatelliteImageResponse may return the following errors:
//	- "BadRequest" (type *goa.ServiceError): http.StatusBadRequest
//	- "InternalError" (type *goa.ServiceError): http.StatusInternalServerError
//	- error: internal error
func DecodeLoadNewRawSatelliteImageResponse(decoder func(*http.Response) goahttp.Decoder, restoreBody bool) func(*http.Response) (interface{}, error) {
	return func(resp *http.Response) (interface{}, error) {
		if restoreBody {
			b, err := ioutil.ReadAll(resp.Body)
			if err != nil {
				return nil, err
			}
			resp.Body = ioutil.NopCloser(bytes.NewBuffer(b))
			defer func() {
				resp.Body = ioutil.NopCloser(bytes.NewBuffer(b))
			}()
		} else {
			defer resp.Body.Close()
		}
		switch resp.StatusCode {
		case http.StatusOK:
			var (
				body LoadNewRawSatelliteImageResponseBody
				err  error
			)
			err = decoder(resp).Decode(&body)
			if err != nil {
				return nil, goahttp.ErrDecodingError("Raw images", "Load new raw satellite image", err)
			}
			p := NewLoadNewRawSatelliteImageGoaResultOK(&body)
			view := "default"
			vres := &rawimagesviews.GoaResult{Projected: p, View: view}
			if err = rawimagesviews.ValidateGoaResult(vres); err != nil {
				return nil, goahttp.ErrValidationError("Raw images", "Load new raw satellite image", err)
			}
			res := rawimages.NewGoaResult(vres)
			return res, nil
		case http.StatusBadRequest:
			var (
				body LoadNewRawSatelliteImageBadRequestResponseBody
				err  error
			)
			err = decoder(resp).Decode(&body)
			if err != nil {
				return nil, goahttp.ErrDecodingError("Raw images", "Load new raw satellite image", err)
			}
			err = ValidateLoadNewRawSatelliteImageBadRequestResponseBody(&body)
			if err != nil {
				return nil, goahttp.ErrValidationError("Raw images", "Load new raw satellite image", err)
			}
			return nil, NewLoadNewRawSatelliteImageBadRequest(&body)
		case http.StatusInternalServerError:
			var (
				body LoadNewRawSatelliteImageInternalErrorResponseBody
				err  error
			)
			err = decoder(resp).Decode(&body)
			if err != nil {
				return nil, goahttp.ErrDecodingError("Raw images", "Load new raw satellite image", err)
			}
			err = ValidateLoadNewRawSatelliteImageInternalErrorResponseBody(&body)
			if err != nil {
				return nil, goahttp.ErrValidationError("Raw images", "Load new raw satellite image", err)
			}
			return nil, NewLoadNewRawSatelliteImageInternalError(&body)
		default:
			body, _ := ioutil.ReadAll(resp.Body)
			return nil, goahttp.ErrInvalidResponse("Raw images", "Load new raw satellite image", resp.StatusCode, string(body))
		}
	}
}

// BuildGetRawSatelliteImageRequest instantiates a HTTP request object with
// method and path set to call the "Raw images" service "Get raw satellite
// image" endpoint
func (c *Client) BuildGetRawSatelliteImageRequest(ctx context.Context, v interface{}) (*http.Request, error) {
	u := &url.URL{Scheme: c.scheme, Host: c.host, Path: GetRawSatelliteImageRawImagesPath()}
	req, err := http.NewRequest("GET", u.String(), nil)
	if err != nil {
		return nil, goahttp.ErrInvalidURL("Raw images", "Get raw satellite image", u.String(), err)
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}

	return req, nil
}

// EncodeGetRawSatelliteImageRequest returns an encoder for requests sent to
// the Raw images Get raw satellite image server.
func EncodeGetRawSatelliteImageRequest(encoder func(*http.Request) goahttp.Encoder) func(*http.Request, interface{}) error {
	return func(req *http.Request, v interface{}) error {
		p, ok := v.(*rawimages.GetRawSatelliteImagePayload)
		if !ok {
			return goahttp.ErrInvalidType("Raw images", "Get raw satellite image", "*rawimages.GetRawSatelliteImagePayload", v)
		}
		body := NewGetRawSatelliteImageRequestBody(p)
		if err := encoder(req).Encode(&body); err != nil {
			return goahttp.ErrEncodingError("Raw images", "Get raw satellite image", err)
		}
		return nil
	}
}

// DecodeGetRawSatelliteImageResponse returns a decoder for responses returned
// by the Raw images Get raw satellite image endpoint. restoreBody controls
// whether the response body should be restored after having been read.
// DecodeGetRawSatelliteImageResponse may return the following errors:
//	- "BadRequest" (type *goa.ServiceError): http.StatusBadRequest
//	- "InternalError" (type *goa.ServiceError): http.StatusInternalServerError
//	- error: internal error
func DecodeGetRawSatelliteImageResponse(decoder func(*http.Response) goahttp.Decoder, restoreBody bool) func(*http.Response) (interface{}, error) {
	return func(resp *http.Response) (interface{}, error) {
		if restoreBody {
			b, err := ioutil.ReadAll(resp.Body)
			if err != nil {
				return nil, err
			}
			resp.Body = ioutil.NopCloser(bytes.NewBuffer(b))
			defer func() {
				resp.Body = ioutil.NopCloser(bytes.NewBuffer(b))
			}()
		} else {
			defer resp.Body.Close()
		}
		switch resp.StatusCode {
		case http.StatusOK:
			var (
				body GetRawSatelliteImageResponseBody
				err  error
			)
			err = decoder(resp).Decode(&body)
			if err != nil {
				return nil, goahttp.ErrDecodingError("Raw images", "Get raw satellite image", err)
			}
			p := NewGetRawSatelliteImageGoaResultOK(&body)
			view := "default"
			vres := &rawimagesviews.GoaResult{Projected: p, View: view}
			if err = rawimagesviews.ValidateGoaResult(vres); err != nil {
				return nil, goahttp.ErrValidationError("Raw images", "Get raw satellite image", err)
			}
			res := rawimages.NewGoaResult(vres)
			return res, nil
		case http.StatusBadRequest:
			var (
				body GetRawSatelliteImageBadRequestResponseBody
				err  error
			)
			err = decoder(resp).Decode(&body)
			if err != nil {
				return nil, goahttp.ErrDecodingError("Raw images", "Get raw satellite image", err)
			}
			err = ValidateGetRawSatelliteImageBadRequestResponseBody(&body)
			if err != nil {
				return nil, goahttp.ErrValidationError("Raw images", "Get raw satellite image", err)
			}
			return nil, NewGetRawSatelliteImageBadRequest(&body)
		case http.StatusInternalServerError:
			var (
				body GetRawSatelliteImageInternalErrorResponseBody
				err  error
			)
			err = decoder(resp).Decode(&body)
			if err != nil {
				return nil, goahttp.ErrDecodingError("Raw images", "Get raw satellite image", err)
			}
			err = ValidateGetRawSatelliteImageInternalErrorResponseBody(&body)
			if err != nil {
				return nil, goahttp.ErrValidationError("Raw images", "Get raw satellite image", err)
			}
			return nil, NewGetRawSatelliteImageInternalError(&body)
		default:
			body, _ := ioutil.ReadAll(resp.Body)
			return nil, goahttp.ErrInvalidResponse("Raw images", "Get raw satellite image", resp.StatusCode, string(body))
		}
	}
}
