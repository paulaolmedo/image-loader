// Code generated by goa v3.3.1, DO NOT EDIT.
//
// Raw images HTTP client types
//
// Command:
// $ goa gen image-loader/design

package client

import (
	rawimages "image-loader/gen/raw_images"
	rawimagesviews "image-loader/gen/raw_images/views"

	goa "goa.design/goa/v3/pkg"
)

// LoadNewRawSatelliteImageRequestBody is the type of the "Raw images" service
// "Load new raw satellite image" endpoint HTTP request body.
type LoadNewRawSatelliteImageRequestBody struct {
	// The image identifier
	ID *string `bson:"_id"`
	// File name of the raw image
	FileName *string `form:"file_name,omitempty" json:"file_name,omitempty" xml:"file_name,omitempty"`
}

// GetRawSatelliteImageRequestBody is the type of the "Raw images" service "Get
// raw satellite image" endpoint HTTP request body.
type GetRawSatelliteImageRequestBody struct {
	// File name of the raw image
	FileName *string `form:"file_name,omitempty" json:"file_name,omitempty" xml:"file_name,omitempty"`
}

// LoadNewRawSatelliteImageResponseBody is the type of the "Raw images" service
// "Load new raw satellite image" endpoint HTTP response body.
type LoadNewRawSatelliteImageResponseBody struct {
	// The operation code
	Code *string `form:"code,omitempty" json:"code,omitempty" xml:"code,omitempty"`
	// The operation description
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
}

// GetRawSatelliteImageResponseBody is the type of the "Raw images" service
// "Get raw satellite image" endpoint HTTP response body.
type GetRawSatelliteImageResponseBody struct {
	// The operation code
	Code *string `form:"code,omitempty" json:"code,omitempty" xml:"code,omitempty"`
	// The operation description
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
}

// LoadNewRawSatelliteImageBadRequestResponseBody is the type of the "Raw
// images" service "Load new raw satellite image" endpoint HTTP response body
// for the "BadRequest" error.
type LoadNewRawSatelliteImageBadRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
	// Is the error temporary?
	Temporary *bool `form:"temporary,omitempty" json:"temporary,omitempty" xml:"temporary,omitempty"`
	// Is the error a timeout?
	Timeout *bool `form:"timeout,omitempty" json:"timeout,omitempty" xml:"timeout,omitempty"`
	// Is the error a server-side fault?
	Fault *bool `form:"fault,omitempty" json:"fault,omitempty" xml:"fault,omitempty"`
}

// LoadNewRawSatelliteImageInternalErrorResponseBody is the type of the "Raw
// images" service "Load new raw satellite image" endpoint HTTP response body
// for the "InternalError" error.
type LoadNewRawSatelliteImageInternalErrorResponseBody struct {
	// Name is the name of this class of errors.
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
	// Is the error temporary?
	Temporary *bool `form:"temporary,omitempty" json:"temporary,omitempty" xml:"temporary,omitempty"`
	// Is the error a timeout?
	Timeout *bool `form:"timeout,omitempty" json:"timeout,omitempty" xml:"timeout,omitempty"`
	// Is the error a server-side fault?
	Fault *bool `form:"fault,omitempty" json:"fault,omitempty" xml:"fault,omitempty"`
}

// GetRawSatelliteImageBadRequestResponseBody is the type of the "Raw images"
// service "Get raw satellite image" endpoint HTTP response body for the
// "BadRequest" error.
type GetRawSatelliteImageBadRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
	// Is the error temporary?
	Temporary *bool `form:"temporary,omitempty" json:"temporary,omitempty" xml:"temporary,omitempty"`
	// Is the error a timeout?
	Timeout *bool `form:"timeout,omitempty" json:"timeout,omitempty" xml:"timeout,omitempty"`
	// Is the error a server-side fault?
	Fault *bool `form:"fault,omitempty" json:"fault,omitempty" xml:"fault,omitempty"`
}

// GetRawSatelliteImageInternalErrorResponseBody is the type of the "Raw
// images" service "Get raw satellite image" endpoint HTTP response body for
// the "InternalError" error.
type GetRawSatelliteImageInternalErrorResponseBody struct {
	// Name is the name of this class of errors.
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
	// Is the error temporary?
	Temporary *bool `form:"temporary,omitempty" json:"temporary,omitempty" xml:"temporary,omitempty"`
	// Is the error a timeout?
	Timeout *bool `form:"timeout,omitempty" json:"timeout,omitempty" xml:"timeout,omitempty"`
	// Is the error a server-side fault?
	Fault *bool `form:"fault,omitempty" json:"fault,omitempty" xml:"fault,omitempty"`
}

// NewLoadNewRawSatelliteImageRequestBody builds the HTTP request body from the
// payload of the "Load new raw satellite image" endpoint of the "Raw images"
// service.
func NewLoadNewRawSatelliteImageRequestBody(p *rawimages.RawSatelliteImage) *LoadNewRawSatelliteImageRequestBody {
	body := &LoadNewRawSatelliteImageRequestBody{
		ID:       p.ID,
		FileName: p.FileName,
	}
	return body
}

// NewGetRawSatelliteImageRequestBody builds the HTTP request body from the
// payload of the "Get raw satellite image" endpoint of the "Raw images"
// service.
func NewGetRawSatelliteImageRequestBody(p *rawimages.GetRawSatelliteImagePayload) *GetRawSatelliteImageRequestBody {
	body := &GetRawSatelliteImageRequestBody{
		FileName: p.FileName,
	}
	return body
}

// NewLoadNewRawSatelliteImageGoaResultOK builds a "Raw images" service "Load
// new raw satellite image" endpoint result from a HTTP "OK" response.
func NewLoadNewRawSatelliteImageGoaResultOK(body *LoadNewRawSatelliteImageResponseBody) *rawimagesviews.GoaResultView {
	v := &rawimagesviews.GoaResultView{
		Code:        body.Code,
		Description: body.Description,
	}

	return v
}

// NewLoadNewRawSatelliteImageBadRequest builds a Raw images service Load new
// raw satellite image endpoint BadRequest error.
func NewLoadNewRawSatelliteImageBadRequest(body *LoadNewRawSatelliteImageBadRequestResponseBody) *goa.ServiceError {
	v := &goa.ServiceError{
		Name:      *body.Name,
		ID:        *body.ID,
		Message:   *body.Message,
		Temporary: *body.Temporary,
		Timeout:   *body.Timeout,
		Fault:     *body.Fault,
	}

	return v
}

// NewLoadNewRawSatelliteImageInternalError builds a Raw images service Load
// new raw satellite image endpoint InternalError error.
func NewLoadNewRawSatelliteImageInternalError(body *LoadNewRawSatelliteImageInternalErrorResponseBody) *goa.ServiceError {
	v := &goa.ServiceError{
		Name:      *body.Name,
		ID:        *body.ID,
		Message:   *body.Message,
		Temporary: *body.Temporary,
		Timeout:   *body.Timeout,
		Fault:     *body.Fault,
	}

	return v
}

// NewGetRawSatelliteImageGoaResultOK builds a "Raw images" service "Get raw
// satellite image" endpoint result from a HTTP "OK" response.
func NewGetRawSatelliteImageGoaResultOK(body *GetRawSatelliteImageResponseBody) *rawimagesviews.GoaResultView {
	v := &rawimagesviews.GoaResultView{
		Code:        body.Code,
		Description: body.Description,
	}

	return v
}

// NewGetRawSatelliteImageBadRequest builds a Raw images service Get raw
// satellite image endpoint BadRequest error.
func NewGetRawSatelliteImageBadRequest(body *GetRawSatelliteImageBadRequestResponseBody) *goa.ServiceError {
	v := &goa.ServiceError{
		Name:      *body.Name,
		ID:        *body.ID,
		Message:   *body.Message,
		Temporary: *body.Temporary,
		Timeout:   *body.Timeout,
		Fault:     *body.Fault,
	}

	return v
}

// NewGetRawSatelliteImageInternalError builds a Raw images service Get raw
// satellite image endpoint InternalError error.
func NewGetRawSatelliteImageInternalError(body *GetRawSatelliteImageInternalErrorResponseBody) *goa.ServiceError {
	v := &goa.ServiceError{
		Name:      *body.Name,
		ID:        *body.ID,
		Message:   *body.Message,
		Temporary: *body.Temporary,
		Timeout:   *body.Timeout,
		Fault:     *body.Fault,
	}

	return v
}

// ValidateLoadNewRawSatelliteImageBadRequestResponseBody runs the validations
// defined on Load new raw satellite image_BadRequest_Response_Body
func ValidateLoadNewRawSatelliteImageBadRequestResponseBody(body *LoadNewRawSatelliteImageBadRequestResponseBody) (err error) {
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	if body.Temporary == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("temporary", "body"))
	}
	if body.Timeout == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("timeout", "body"))
	}
	if body.Fault == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("fault", "body"))
	}
	return
}

// ValidateLoadNewRawSatelliteImageInternalErrorResponseBody runs the
// validations defined on Load new raw satellite
// image_InternalError_Response_Body
func ValidateLoadNewRawSatelliteImageInternalErrorResponseBody(body *LoadNewRawSatelliteImageInternalErrorResponseBody) (err error) {
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	if body.Temporary == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("temporary", "body"))
	}
	if body.Timeout == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("timeout", "body"))
	}
	if body.Fault == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("fault", "body"))
	}
	return
}

// ValidateGetRawSatelliteImageBadRequestResponseBody runs the validations
// defined on Get raw satellite image_BadRequest_Response_Body
func ValidateGetRawSatelliteImageBadRequestResponseBody(body *GetRawSatelliteImageBadRequestResponseBody) (err error) {
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	if body.Temporary == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("temporary", "body"))
	}
	if body.Timeout == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("timeout", "body"))
	}
	if body.Fault == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("fault", "body"))
	}
	return
}

// ValidateGetRawSatelliteImageInternalErrorResponseBody runs the validations
// defined on Get raw satellite image_InternalError_Response_Body
func ValidateGetRawSatelliteImageInternalErrorResponseBody(body *GetRawSatelliteImageInternalErrorResponseBody) (err error) {
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	if body.Temporary == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("temporary", "body"))
	}
	if body.Timeout == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("timeout", "body"))
	}
	if body.Fault == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("fault", "body"))
	}
	return
}
