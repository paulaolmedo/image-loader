// Code generated by goa v3.2.3, DO NOT EDIT.
//
// Raw images HTTP server types
//
// Command:
// $ goa gen image-loader/design

package server

import (
	rawimages "image-loader/gen/raw_images"
	rawimagesviews "image-loader/gen/raw_images/views"

	goa "goa.design/goa/v3/pkg"
)

// LoadNewRawSatelliteImageRequestBody is the type of the "Raw images" service
// "Load new raw satellite image" endpoint HTTP request body.
type LoadNewRawSatelliteImageRequestBody struct {
	// The image identifier
	ID *string `bson:"_id"`
	// File name of the raw image
	FileName *string `form:"file_name,omitempty" json:"file_name,omitempty" xml:"file_name,omitempty"`
}

// GetRawSatelliteImageRequestBody is the type of the "Raw images" service "Get
// raw satellite image" endpoint HTTP request body.
type GetRawSatelliteImageRequestBody struct {
	// File name of the raw image
	FileName *string `form:"file_name,omitempty" json:"file_name,omitempty" xml:"file_name,omitempty"`
}

// LoadNewProcessedSatelliteImageRequestBody is the type of the "Raw images"
// service "Load new processed satellite image" endpoint HTTP request body.
type LoadNewProcessedSatelliteImageRequestBody struct {
	// The image identifier
	ID *string `bson:"_id"`
	// File name of the processed image
	FileName              *string                           `form:"file_name,omitempty" json:"file_name,omitempty" xml:"file_name,omitempty"`
	GeographicInformation *GeographicInformationRequestBody `form:"geographic_information,omitempty" json:"geographic_information,omitempty" xml:"geographic_information,omitempty"`
	// When was the image taken
	DateTime          *string                       `form:"date_time,omitempty" json:"date_time,omitempty" xml:"date_time,omitempty"`
	NormalizedIndexes *NormalizedIndexesRequestBody `form:"normalized_indexes,omitempty" json:"normalized_indexes,omitempty" xml:"normalized_indexes,omitempty"`
}

// LoadNewRawSatelliteImageResponseBody is the type of the "Raw images" service
// "Load new raw satellite image" endpoint HTTP response body.
type LoadNewRawSatelliteImageResponseBody struct {
	// The operation code
	Code *string `form:"code,omitempty" json:"code,omitempty" xml:"code,omitempty"`
	// The operation description
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
}

// GetRawSatelliteImageResponseBody is the type of the "Raw images" service
// "Get raw satellite image" endpoint HTTP response body.
type GetRawSatelliteImageResponseBody struct {
	// The operation code
	Code *string `form:"code,omitempty" json:"code,omitempty" xml:"code,omitempty"`
	// The operation description
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
}

// LoadNewRawSatelliteImageBadRequestResponseBody is the type of the "Raw
// images" service "Load new raw satellite image" endpoint HTTP response body
// for the "BadRequest" error.
type LoadNewRawSatelliteImageBadRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// LoadNewRawSatelliteImageInternalErrorResponseBody is the type of the "Raw
// images" service "Load new raw satellite image" endpoint HTTP response body
// for the "InternalError" error.
type LoadNewRawSatelliteImageInternalErrorResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetRawSatelliteImageBadRequestResponseBody is the type of the "Raw images"
// service "Get raw satellite image" endpoint HTTP response body for the
// "BadRequest" error.
type GetRawSatelliteImageBadRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetRawSatelliteImageInternalErrorResponseBody is the type of the "Raw
// images" service "Get raw satellite image" endpoint HTTP response body for
// the "InternalError" error.
type GetRawSatelliteImageInternalErrorResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// LoadNewProcessedSatelliteImageBadRequestResponseBody is the type of the "Raw
// images" service "Load new processed satellite image" endpoint HTTP response
// body for the "BadRequest" error.
type LoadNewProcessedSatelliteImageBadRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// LoadNewProcessedSatelliteImageInternalErrorResponseBody is the type of the
// "Raw images" service "Load new processed satellite image" endpoint HTTP
// response body for the "InternalError" error.
type LoadNewProcessedSatelliteImageInternalErrorResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GeographicInformationRequestBody is used to define fields on request body
// types.
type GeographicInformationRequestBody struct {
	// Non-forgetable identifier
	TagName *string `form:"tag_name,omitempty" json:"tag_name,omitempty" xml:"tag_name,omitempty"`
	// Coordinates of the satellite image
	Coordinates map[string]float64 `form:"coordinates,omitempty" json:"coordinates,omitempty" xml:"coordinates,omitempty"`
}

// NormalizedIndexesRequestBody is used to define fields on request body types.
type NormalizedIndexesRequestBody struct {
	// Normalized difference vegetation index
	Ndvi []float64 `form:"ndvi,omitempty" json:"ndvi,omitempty" xml:"ndvi,omitempty"`
	// Normalized difference water index
	Ndwi []float64 `form:"ndwi,omitempty" json:"ndwi,omitempty" xml:"ndwi,omitempty"`
}

// NewLoadNewRawSatelliteImageResponseBody builds the HTTP response body from
// the result of the "Load new raw satellite image" endpoint of the "Raw
// images" service.
func NewLoadNewRawSatelliteImageResponseBody(res *rawimagesviews.GoaResultView) *LoadNewRawSatelliteImageResponseBody {
	body := &LoadNewRawSatelliteImageResponseBody{
		Code:        res.Code,
		Description: res.Description,
	}
	return body
}

// NewGetRawSatelliteImageResponseBody builds the HTTP response body from the
// result of the "Get raw satellite image" endpoint of the "Raw images" service.
func NewGetRawSatelliteImageResponseBody(res *rawimagesviews.GoaResultView) *GetRawSatelliteImageResponseBody {
	body := &GetRawSatelliteImageResponseBody{
		Code:        res.Code,
		Description: res.Description,
	}
	return body
}

// NewLoadNewRawSatelliteImageBadRequestResponseBody builds the HTTP response
// body from the result of the "Load new raw satellite image" endpoint of the
// "Raw images" service.
func NewLoadNewRawSatelliteImageBadRequestResponseBody(res *goa.ServiceError) *LoadNewRawSatelliteImageBadRequestResponseBody {
	body := &LoadNewRawSatelliteImageBadRequestResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewLoadNewRawSatelliteImageInternalErrorResponseBody builds the HTTP
// response body from the result of the "Load new raw satellite image" endpoint
// of the "Raw images" service.
func NewLoadNewRawSatelliteImageInternalErrorResponseBody(res *goa.ServiceError) *LoadNewRawSatelliteImageInternalErrorResponseBody {
	body := &LoadNewRawSatelliteImageInternalErrorResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetRawSatelliteImageBadRequestResponseBody builds the HTTP response body
// from the result of the "Get raw satellite image" endpoint of the "Raw
// images" service.
func NewGetRawSatelliteImageBadRequestResponseBody(res *goa.ServiceError) *GetRawSatelliteImageBadRequestResponseBody {
	body := &GetRawSatelliteImageBadRequestResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetRawSatelliteImageInternalErrorResponseBody builds the HTTP response
// body from the result of the "Get raw satellite image" endpoint of the "Raw
// images" service.
func NewGetRawSatelliteImageInternalErrorResponseBody(res *goa.ServiceError) *GetRawSatelliteImageInternalErrorResponseBody {
	body := &GetRawSatelliteImageInternalErrorResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewLoadNewProcessedSatelliteImageBadRequestResponseBody builds the HTTP
// response body from the result of the "Load new processed satellite image"
// endpoint of the "Raw images" service.
func NewLoadNewProcessedSatelliteImageBadRequestResponseBody(res *goa.ServiceError) *LoadNewProcessedSatelliteImageBadRequestResponseBody {
	body := &LoadNewProcessedSatelliteImageBadRequestResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewLoadNewProcessedSatelliteImageInternalErrorResponseBody builds the HTTP
// response body from the result of the "Load new processed satellite image"
// endpoint of the "Raw images" service.
func NewLoadNewProcessedSatelliteImageInternalErrorResponseBody(res *goa.ServiceError) *LoadNewProcessedSatelliteImageInternalErrorResponseBody {
	body := &LoadNewProcessedSatelliteImageInternalErrorResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewLoadNewRawSatelliteImageRawSatelliteImage builds a Raw images service
// Load new raw satellite image endpoint payload.
func NewLoadNewRawSatelliteImageRawSatelliteImage(body *LoadNewRawSatelliteImageRequestBody) *rawimages.RawSatelliteImage {
	v := &rawimages.RawSatelliteImage{
		ID:       body.ID,
		FileName: body.FileName,
	}

	return v
}

// NewGetRawSatelliteImagePayload builds a Raw images service Get raw satellite
// image endpoint payload.
func NewGetRawSatelliteImagePayload(body *GetRawSatelliteImageRequestBody) *rawimages.GetRawSatelliteImagePayload {
	v := &rawimages.GetRawSatelliteImagePayload{
		FileName: body.FileName,
	}

	return v
}

// NewLoadNewProcessedSatelliteImageProcessedSatelliteImage builds a Raw images
// service Load new processed satellite image endpoint payload.
func NewLoadNewProcessedSatelliteImageProcessedSatelliteImage(body *LoadNewProcessedSatelliteImageRequestBody) *rawimages.ProcessedSatelliteImage {
	v := &rawimages.ProcessedSatelliteImage{
		ID:       body.ID,
		FileName: body.FileName,
		DateTime: body.DateTime,
	}
	if body.GeographicInformation != nil {
		v.GeographicInformation = unmarshalGeographicInformationRequestBodyToRawimagesGeographicInformation(body.GeographicInformation)
	}
	if body.NormalizedIndexes != nil {
		v.NormalizedIndexes = unmarshalNormalizedIndexesRequestBodyToRawimagesNormalizedIndexes(body.NormalizedIndexes)
	}

	return v
}

// ValidateLoadNewProcessedSatelliteImageRequestBody runs the validations
// defined on Load New Processed Satellite ImageRequestBody
func ValidateLoadNewProcessedSatelliteImageRequestBody(body *LoadNewProcessedSatelliteImageRequestBody) (err error) {
	if body.DateTime != nil {
		err = goa.MergeErrors(err, goa.ValidateFormat("body.date_time", *body.DateTime, goa.FormatDateTime))
	}
	return
}
