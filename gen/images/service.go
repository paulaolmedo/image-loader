// Code generated by goa v3.2.3, DO NOT EDIT.
//
// Images service
//
// Command:
// $ goa gen image-loader/design

package images

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Service is the Images service interface.
type Service interface {
	// loads a new image into the database
	LoadNewSatelliteImage(context.Context, *SatelliteImage) (err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "Images"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [1]string{"Load new satellite image"}

// SatelliteImage is the payload type of the Images service Load new satellite
// image method.
type SatelliteImage struct {
	// The image identifier
	ID                    *string `bson:"_id"`
	GeographicInformation *GeographicInformation
	// When was the image taken
	DateTime          *string
	NormalizedIndexes *NormalizedIndexes
}

type GeographicInformation struct {
	// Non-forgetable identifier
	TagName *string
	// Coordinates of the satellite image
	Coordinates map[string]float64
}

type NormalizedIndexes struct {
	// Normalized difference vegetation index
	Ndvi []float64
	// Normalized difference water index
	Ndwi []float64
}

// MakeInternalError builds a goa.ServiceError from an error.
func MakeInternalError(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "InternalError",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeBadRequest builds a goa.ServiceError from an error.
func MakeBadRequest(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "BadRequest",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeNotFound builds a goa.ServiceError from an error.
func MakeNotFound(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "NotFound",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeErrorAddingImage builds a goa.ServiceError from an error.
func MakeErrorAddingImage(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "ErrorAddingImage",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}
