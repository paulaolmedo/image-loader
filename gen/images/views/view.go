// Code generated by goa v3.2.3, DO NOT EDIT.
//
// Images views
//
// Command:
// $ goa gen image-loader/design

package views

import (
	goa "goa.design/goa/v3/pkg"
)

// GoaResult is the viewed result type that is projected based on a view.
type GoaResult struct {
	// Type to project
	Projected *GoaResultView
	// View to render
	View string
}

// GoaResultView is a type that runs validations on a projected type.
type GoaResultView struct {
	// The operation code
	Code *string
	// The operation description
	Description *string
}

var (
	// GoaResultMap is a map of attribute names in result type GoaResult indexed by
	// view name.
	GoaResultMap = map[string][]string{
		"default": []string{
			"code",
			"description",
		},
	}
)

// ValidateGoaResult runs the validations defined on the viewed result type
// GoaResult.
func ValidateGoaResult(result *GoaResult) (err error) {
	switch result.View {
	case "default", "":
		err = ValidateGoaResultView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []interface{}{"default"})
	}
	return
}

// ValidateGoaResultView runs the validations defined on GoaResultView using
// the "default" view.
func ValidateGoaResultView(result *GoaResultView) (err error) {

	return
}
