// Code generated by goa v3.3.1, DO NOT EDIT.
//
// Processed images endpoints
//
// Command:
// $ goa gen image-loader/design

package processedimages

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "Processed images" service endpoints.
type Endpoints struct {
	LoadNewProcessedSatelliteImage goa.Endpoint
	GetProcessedSatelliteImage     goa.Endpoint
}

// NewEndpoints wraps the methods of the "Processed images" service with
// endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		LoadNewProcessedSatelliteImage: NewLoadNewProcessedSatelliteImageEndpoint(s),
		GetProcessedSatelliteImage:     NewGetProcessedSatelliteImageEndpoint(s),
	}
}

// Use applies the given middleware to all the "Processed images" service
// endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.LoadNewProcessedSatelliteImage = m(e.LoadNewProcessedSatelliteImage)
	e.GetProcessedSatelliteImage = m(e.GetProcessedSatelliteImage)
}

// NewLoadNewProcessedSatelliteImageEndpoint returns an endpoint function that
// calls the method "Load new processed satellite image" of service "Processed
// images".
func NewLoadNewProcessedSatelliteImageEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*ProcessedSatelliteImage)
		res, err := s.LoadNewProcessedSatelliteImage(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedGoaResult(res, "default")
		return vres, nil
	}
}

// NewGetProcessedSatelliteImageEndpoint returns an endpoint function that
// calls the method "Get processed satellite image" of service "Processed
// images".
func NewGetProcessedSatelliteImageEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetProcessedSatelliteImagePayload)
		res, err := s.GetProcessedSatelliteImage(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedGoaResult(res, "default")
		return vres, nil
	}
}
